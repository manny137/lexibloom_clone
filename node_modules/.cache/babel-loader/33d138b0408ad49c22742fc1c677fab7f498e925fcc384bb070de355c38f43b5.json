{"ast":null,"code":"var _jsxFileName = \"/Users/mansigahlawat/Desktop/sih_ps_2/LexiBloom_1/src/components/UploadText.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TextReader from './TextReader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadText = () => {\n  _s();\n  const [lines, setLines] = useState([]);\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file && file.type === \"text/plain\") {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const content = reader.result.split('\\n').filter(line => line.trim() !== '');\n        setLines(content);\n      };\n      reader.readAsText(file);\n    } else {\n      alert(\"Please upload a valid .txt file.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: lines.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fileUpload\",\n        children: \"Upload a .txt file:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"fileUpload\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 8\n    }, this) : /*#__PURE__*/_jsxDEV(TextReader, {\n      lines: lines\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadText, \"KjQvnv/0TE17f2Vv5pQIGFQt6/w=\");\n_c = UploadText;\nexport default UploadText;\nvar _c;\n$RefreshReg$(_c, \"UploadText\");","map":{"version":3,"names":["React","useState","TextReader","jsxDEV","_jsxDEV","UploadText","_s","lines","setLines","handleFileChange","e","file","target","files","type","reader","FileReader","onload","content","result","split","filter","line","trim","readAsText","alert","children","length","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","_c","$RefreshReg$"],"sources":["/Users/mansigahlawat/Desktop/sih_ps_2/LexiBloom_1/src/components/UploadText.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport TextReader from './TextReader';\n\n\nconst UploadText = () => {\n  const [lines, setLines] = useState([]);\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file && file.type === \"text/plain\") {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const content = reader.result.split('\\n').filter(line => line.trim() !== '');\n        setLines(content);\n      };\n      reader.readAsText(file);\n    } else {\n      alert(\"Please upload a valid .txt file.\");\n    }\n  };\n\n  return (\n    <div>\n      {lines.length === 0 ? (\n       <div className=\"upload-container\">\n  <label htmlFor=\"fileUpload\">Upload a .txt file:</label>\n  <input type=\"file\" id=\"fileUpload\" onChange={handleFileChange} />\n</div>\n\n      ) : (\n        <TextReader lines={lines} />\n      )}\n    </div>\n  );\n};\n\nexport default UploadText;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAIF,IAAI,IAAIA,IAAI,CAACG,IAAI,KAAK,YAAY,EAAE;MACtC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAG,MAAM;QACpB,MAAMC,OAAO,GAAGH,MAAM,CAACI,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;QAC5Ef,QAAQ,CAACU,OAAO,CAAC;MACnB,CAAC;MACDH,MAAM,CAACS,UAAU,CAACb,IAAI,CAAC;IACzB,CAAC,MAAM;MACLc,KAAK,CAAC,kCAAkC,CAAC;IAC3C;EACF,CAAC;EAED,oBACErB,OAAA;IAAAsB,QAAA,EACGnB,KAAK,CAACoB,MAAM,KAAK,CAAC,gBAClBvB,OAAA;MAAKwB,SAAS,EAAC,kBAAkB;MAAAF,QAAA,gBACtCtB,OAAA;QAAOyB,OAAO,EAAC,YAAY;QAAAH,QAAA,EAAC;MAAmB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvD7B,OAAA;QAAOU,IAAI,EAAC,MAAM;QAACoB,EAAE,EAAC,YAAY;QAACC,QAAQ,EAAE1B;MAAiB;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC,gBAGE7B,OAAA,CAACF,UAAU;MAACK,KAAK,EAAEA;IAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAC5B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA9BID,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AAgChB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}