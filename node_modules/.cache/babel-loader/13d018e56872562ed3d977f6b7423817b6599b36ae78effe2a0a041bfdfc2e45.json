{"ast":null,"code":"var _jsxFileName = \"/Users/mansigahlawat/Desktop/sih_ps_2/LexiBloom_1/src/components/OCRContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Tesseract from \"tesseract.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OCRContainer = () => {\n  _s();\n  const [imageFile, setImageFile] = useState(null);\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const handleImageUpload = e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (!file) return;\n    setImageFile(URL.createObjectURL(file));\n    setText(\"\");\n    setError(\"\");\n    setLoading(true);\n    Tesseract.recognize(file, \"eng\", {\n      logger: m => console.log(m)\n    }).then(({\n      data: {\n        text\n      }\n    }) => {\n      setText(text.trim());\n      setLoading(false);\n    }).catch(err => {\n      console.error(err);\n      setError(\"Failed to extract text. Please try another image.\");\n      setLoading(false);\n    });\n  };\n  const downloadText = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([text], {\n      type: \"text/plain\"\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = \"extracted_text.txt\";\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ocr-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83D\\uDCF7 Upload an Image to Extract Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"processing\",\n      children: \"\\uD83D\\uDD52 Processing image, please wait\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), imageFile && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageFile,\n        alt: \"Uploaded preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), text && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extracted-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83D\\uDCDD Extracted Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"download-btn\",\n        onClick: downloadText,\n        children: \"\\u2B07\\uFE0F Download Extracted Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(OCRContainer, \"qZWsTui6REqGe8EECZbtj5jb/vQ=\");\n_c = OCRContainer;\nexport default OCRContainer;\nvar _c;\n$RefreshReg$(_c, \"OCRContainer\");","map":{"version":3,"names":["React","useState","Tesseract","jsxDEV","_jsxDEV","OCRContainer","_s","imageFile","setImageFile","text","setText","loading","setLoading","error","setError","handleImageUpload","e","_e$target$files","file","target","files","URL","createObjectURL","recognize","logger","m","console","log","then","data","trim","catch","err","downloadText","element","document","createElement","Blob","type","href","download","body","appendChild","click","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","src","alt","onClick","_c","$RefreshReg$"],"sources":["/Users/mansigahlawat/Desktop/sih_ps_2/LexiBloom_1/src/components/OCRContainer.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Tesseract from \"tesseract.js\";\n\nconst OCRContainer = () => {\n  const [imageFile, setImageFile] = useState(null);\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const handleImageUpload = (e) => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n\n    setImageFile(URL.createObjectURL(file));\n    setText(\"\");\n    setError(\"\");\n    setLoading(true);\n\n    Tesseract.recognize(file, \"eng\", {\n      logger: (m) => console.log(m),\n    })\n      .then(({ data: { text } }) => {\n        setText(text.trim());\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error(err);\n        setError(\"Failed to extract text. Please try another image.\");\n        setLoading(false);\n      });\n  };\n\n  const downloadText = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([text], { type: \"text/plain\" });\n    element.href = URL.createObjectURL(file);\n    element.download = \"extracted_text.txt\";\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  };\n\n  return (\n    <div className=\"ocr-container\">\n      <h3>üì∑ Upload an Image to Extract Text</h3>\n\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={handleImageUpload}\n      />\n\n      {loading && <p className=\"processing\">üïí Processing image, please wait‚Ä¶</p>}\n      {error && <p className=\"error\">{error}</p>}\n\n      {imageFile && (\n        <div>\n          <img src={imageFile} alt=\"Uploaded preview\" />\n        </div>\n      )}\n\n      {text && (\n        <div className=\"extracted-text\">\n          <h4>üìù Extracted Text:</h4>\n          <p>{text}</p>\n          <button className=\"download-btn\" onClick={downloadText}>\n            ‚¨áÔ∏è Download Extracted Text\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OCRContainer;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMc,iBAAiB,GAAIC,CAAC,IAAK;IAAA,IAAAC,eAAA;IAC/B,MAAMC,IAAI,IAAAD,eAAA,GAAGD,CAAC,CAACG,MAAM,CAACC,KAAK,cAAAH,eAAA,uBAAdA,eAAA,CAAiB,CAAC,CAAC;IAChC,IAAI,CAACC,IAAI,EAAE;IAEXV,YAAY,CAACa,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC,CAAC;IACvCR,OAAO,CAAC,EAAE,CAAC;IACXI,QAAQ,CAAC,EAAE,CAAC;IACZF,UAAU,CAAC,IAAI,CAAC;IAEhBV,SAAS,CAACqB,SAAS,CAACL,IAAI,EAAE,KAAK,EAAE;MAC/BM,MAAM,EAAGC,CAAC,IAAKC,OAAO,CAACC,GAAG,CAACF,CAAC;IAC9B,CAAC,CAAC,CACCG,IAAI,CAAC,CAAC;MAAEC,IAAI,EAAE;QAAEpB;MAAK;IAAE,CAAC,KAAK;MAC5BC,OAAO,CAACD,IAAI,CAACqB,IAAI,CAAC,CAAC,CAAC;MACpBlB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDmB,KAAK,CAAEC,GAAG,IAAK;MACdN,OAAO,CAACb,KAAK,CAACmB,GAAG,CAAC;MAClBlB,QAAQ,CAAC,mDAAmD,CAAC;MAC7DF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC;EAED,MAAMqB,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IAC3C,MAAMlB,IAAI,GAAG,IAAImB,IAAI,CAAC,CAAC5B,IAAI,CAAC,EAAE;MAAE6B,IAAI,EAAE;IAAa,CAAC,CAAC;IACrDJ,OAAO,CAACK,IAAI,GAAGlB,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;IACxCgB,OAAO,CAACM,QAAQ,GAAG,oBAAoB;IACvCL,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACR,OAAO,CAAC;IAClCA,OAAO,CAACS,KAAK,CAAC,CAAC;IACfR,QAAQ,CAACM,IAAI,CAACG,WAAW,CAACV,OAAO,CAAC;EACpC,CAAC;EAED,oBACE9B,OAAA;IAAKyC,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5B1C,OAAA;MAAA0C,QAAA,EAAI;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE3C9C,OAAA;MACEkC,IAAI,EAAC,MAAM;MACXa,MAAM,EAAC,SAAS;MAChBC,QAAQ,EAAErC;IAAkB;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,EAEDvC,OAAO,iBAAIP,OAAA;MAAGyC,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC1ErC,KAAK,iBAAIT,OAAA;MAAGyC,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEjC;IAAK;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEzC3C,SAAS,iBACRH,OAAA;MAAA0C,QAAA,eACE1C,OAAA;QAAKiD,GAAG,EAAE9C,SAAU;QAAC+C,GAAG,EAAC;MAAkB;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CACN,EAEAzC,IAAI,iBACHL,OAAA;MAAKyC,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7B1C,OAAA;QAAA0C,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3B9C,OAAA;QAAA0C,QAAA,EAAIrC;MAAI;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACb9C,OAAA;QAAQyC,SAAS,EAAC,cAAc;QAACU,OAAO,EAAEtB,YAAa;QAAAa,QAAA,EAAC;MAExD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC5C,EAAA,CArEID,YAAY;AAAAmD,EAAA,GAAZnD,YAAY;AAuElB,eAAeA,YAAY;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}