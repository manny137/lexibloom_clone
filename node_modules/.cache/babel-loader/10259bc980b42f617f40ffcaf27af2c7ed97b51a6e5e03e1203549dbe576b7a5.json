{"ast":null,"code":"var _jsxFileName = \"/Users/mansigahlawat/Desktop/sih_ps_2/LexiBloom_1/src/components/TextReader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/TextReader.css'; // style it here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextReader = ({\n  lines\n}) => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const speakLine = () => {\n    const utterance = new SpeechSynthesisUtterance(lines[currentIndex]);\n    window.speechSynthesis.speak(utterance);\n  };\n  const nextLine = () => {\n    if (currentIndex < lines.length - 1) setCurrentIndex(prev => prev + 1);\n  };\n  const prevLine = () => {\n    if (currentIndex > 0) setCurrentIndex(prev => prev - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reader-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-lines\",\n      children: lines.map((line, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `line ${idx === currentIndex ? 'active-line' : 'blurred-line'}`,\n        children: line\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevLine,\n        disabled: currentIndex === 0,\n        children: \"\\uD83D\\uDD01 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: speakLine,\n        children: \"\\u25B6\\uFE0F Speak\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextLine,\n        disabled: currentIndex === lines.length - 1,\n        children: \"\\u23ED\\uFE0F Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(TextReader, \"tusBbsahUVevXfyh6oH5R6YDC9Q=\");\n_c = TextReader;\nexport default TextReader;\nvar _c;\n$RefreshReg$(_c, \"TextReader\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TextReader","lines","_s","currentIndex","setCurrentIndex","speakLine","utterance","SpeechSynthesisUtterance","window","speechSynthesis","speak","nextLine","length","prev","prevLine","className","children","map","line","idx","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/mansigahlawat/Desktop/sih_ps_2/LexiBloom_1/src/components/TextReader.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/TextReader.css'; // style it here\n\nconst TextReader = ({ lines }) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const speakLine = () => {\n    const utterance = new SpeechSynthesisUtterance(lines[currentIndex]);\n    window.speechSynthesis.speak(utterance);\n  };\n\n  const nextLine = () => {\n    if (currentIndex < lines.length - 1) setCurrentIndex(prev => prev + 1);\n  };\n\n  const prevLine = () => {\n    if (currentIndex > 0) setCurrentIndex(prev => prev - 1);\n  };\n\n  return (\n    <div className=\"reader-container\">\n      <div className=\"text-lines\">\n        {lines.map((line, idx) => (\n          <div\n            key={idx}\n            className={`line ${idx === currentIndex ? 'active-line' : 'blurred-line'}`}\n          >\n            {line}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"controls\">\n        <button onClick={prevLine} disabled={currentIndex === 0}>üîÅ Back</button>\n        <button onClick={speakLine}>‚ñ∂Ô∏è Speak</button>\n        <button onClick={nextLine} disabled={currentIndex === lines.length - 1}>‚è≠Ô∏è Next</button>\n      </div>\n    </div>\n  );\n};\n\nexport default TextReader;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,0BAA0B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAEnD,MAAMS,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,SAAS,GAAG,IAAIC,wBAAwB,CAACN,KAAK,CAACE,YAAY,CAAC,CAAC;IACnEK,MAAM,CAACC,eAAe,CAACC,KAAK,CAACJ,SAAS,CAAC;EACzC,CAAC;EAED,MAAMK,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIR,YAAY,GAAGF,KAAK,CAACW,MAAM,GAAG,CAAC,EAAER,eAAe,CAACS,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;EACxE,CAAC;EAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIX,YAAY,GAAG,CAAC,EAAEC,eAAe,CAACS,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;EACzD,CAAC;EAED,oBACEd,OAAA;IAAKgB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BjB,OAAA;MAAKgB,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBf,KAAK,CAACgB,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,kBACnBpB,OAAA;QAEEgB,SAAS,EAAE,QAAQI,GAAG,KAAKhB,YAAY,GAAG,aAAa,GAAG,cAAc,EAAG;QAAAa,QAAA,EAE1EE;MAAI,GAHAC,GAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIL,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENxB,OAAA;MAAKgB,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBjB,OAAA;QAAQyB,OAAO,EAAEV,QAAS;QAACW,QAAQ,EAAEtB,YAAY,KAAK,CAAE;QAAAa,QAAA,EAAC;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzExB,OAAA;QAAQyB,OAAO,EAAEnB,SAAU;QAAAW,QAAA,EAAC;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7CxB,OAAA;QAAQyB,OAAO,EAAEb,QAAS;QAACc,QAAQ,EAAEtB,YAAY,KAAKF,KAAK,CAACW,MAAM,GAAG,CAAE;QAAAI,QAAA,EAAC;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrB,EAAA,CApCIF,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AAsChB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}