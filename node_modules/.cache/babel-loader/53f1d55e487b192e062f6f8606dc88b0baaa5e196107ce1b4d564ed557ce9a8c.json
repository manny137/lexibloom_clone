{"ast":null,"code":"var _jsxFileName = \"/Users/mansigahlawat/Desktop/sih_ps_2/LexiBloom_1/src/components/FlashcardGenerator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/FlashcardGenerator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlashcardGenerator = () => {\n  _s();\n  const [text, setText] = useState('');\n  const [flashcards, setFlashcards] = useState([]);\n  const generateFlashcards = () => {\n    if (!text.trim()) {\n      alert('Please enter some text.');\n      return;\n    }\n    const sentences = text.match(/[^.!?]+[.!?]/g) || text.split('.');\n    const top5 = sentences.map(s => s.trim()).filter(Boolean).slice(0, 5);\n    const cards = top5.map((sentence, index) => {\n      let question = '';\n      const s = sentence.toLowerCase();\n      if (s.includes('because')) {\n        question = 'Why does this occur?';\n      } else if (s.includes('uses') || s.includes('used')) {\n        question = 'How is this used?';\n      } else if (s.includes('helps') || s.includes('enables')) {\n        question = 'What does this help with?';\n      } else if (s.includes('causes') || s.includes('leads to')) {\n        question = 'What is the consequence?';\n      } else if (s.includes('also') || s.includes('in addition')) {\n        question = 'What additional information is provided?';\n      } else if (s.includes('is')) {\n        question = 'What is being defined here?';\n      } else {\n        const starters = ['Can you summarize this?', 'What concept is explained here?', 'What is this sentence talking about?', 'What can we learn from this?', 'What does this describe?'];\n        question = starters[index % starters.length];\n      }\n      return {\n        question: `Q${index + 1}: ${question}`,\n        answer: sentence\n      };\n    });\n    setFlashcards(cards);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flashcard-generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Flashcard Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"5\",\n      placeholder: \"Paste any paragraph here to generate flashcards...\",\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateFlashcards,\n      children: \"Generate 3 Flashcards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flashcard-scroll-container\",\n      children: flashcards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flashcard\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: card.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: card.answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(FlashcardGenerator, \"nxmQQboPTnGaCJPDNrIlv15ww38=\");\n_c = FlashcardGenerator;\nexport default FlashcardGenerator;\nvar _c;\n$RefreshReg$(_c, \"FlashcardGenerator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FlashcardGenerator","_s","text","setText","flashcards","setFlashcards","generateFlashcards","trim","alert","sentences","match","split","top5","map","s","filter","Boolean","slice","cards","sentence","index","question","toLowerCase","includes","starters","length","answer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","placeholder","value","onChange","e","target","onClick","card","_c","$RefreshReg$"],"sources":["/Users/mansigahlawat/Desktop/sih_ps_2/LexiBloom_1/src/components/FlashcardGenerator.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/FlashcardGenerator.css';\n\nconst FlashcardGenerator = () => {\n  const [text, setText] = useState('');\n  const [flashcards, setFlashcards] = useState([]);\n\n  const generateFlashcards = () => {\n    if (!text.trim()) {\n      alert('Please enter some text.');\n      return;\n    }\n\n    const sentences = text.match(/[^.!?]+[.!?]/g) || text.split('.');\n    const top5 = sentences\n      .map(s => s.trim())\n      .filter(Boolean)\n      .slice(0, 5);\n\n    const cards = top5.map((sentence, index) => {\n      let question = '';\n\n      const s = sentence.toLowerCase();\n\n      if (s.includes('because')) {\n        question = 'Why does this occur?';\n      } else if (s.includes('uses') || s.includes('used')) {\n        question = 'How is this used?';\n      } else if (s.includes('helps') || s.includes('enables')) {\n        question = 'What does this help with?';\n      } else if (s.includes('causes') || s.includes('leads to')) {\n        question = 'What is the consequence?';\n      } else if (s.includes('also') || s.includes('in addition')) {\n        question = 'What additional information is provided?';\n      } else if (s.includes('is')) {\n        question = 'What is being defined here?';\n      } else {\n        const starters = [\n          'Can you summarize this?',\n          'What concept is explained here?',\n          'What is this sentence talking about?',\n          'What can we learn from this?',\n          'What does this describe?'\n        ];\n        question = starters[index % starters.length];\n      }\n\n      return {\n        question: `Q${index + 1}: ${question}`,\n        answer: sentence\n      };\n    });\n\n    setFlashcards(cards);\n  };\n\n  return (\n    <div className=\"flashcard-generator\">\n      <h2>Flashcard Generator</h2>\n      <textarea\n        rows=\"5\"\n        placeholder=\"Paste any paragraph here to generate flashcards...\"\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n      />\n      <button onClick={generateFlashcards}>Generate 3 Flashcards</button>\n\n      <div className=\"flashcard-scroll-container\">\n        {flashcards.map((card, index) => (\n          <div key={index} className=\"flashcard\">\n            <h4>{card.question}</h4>\n            <p>{card.answer}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FlashcardGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}